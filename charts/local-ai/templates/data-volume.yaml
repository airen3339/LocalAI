{{- if .Values.dataVolume.enabled }}
apiVersion: cdi.kubevirt.io/v1beta1
kind: DataVolume
metadata:
  name: {{ template "local-ai.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ template "local-ai.name" . }}
    helm.sh/chart: {{ include "local-ai.chart" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  contentType: archive
  source:
    {{ .Values.dataVolume.source.type }}:
      url: {{ .Values.dataVolume.source.url }}
      secretRef: {{ template "local-ai.fullname" . }}
      {{- if and (eq .Values.dataVolume.source.type "http") .Values.dataVolume.source.secretExtraHeaders }}
      secretExtraHeaders: {{ .Values.dataVolume.source.secretExtraHeaders }}
      {{- end }}
      {{- if .Values.dataVolume.source.caCertConfigMap }}
      caCertConfigMap: {{ .Values.dataVolume.source.caCertConfigMap }}
      {{- end }}
  pvc:
    accessModes: {{ .Values.dataVolume.pvc.accessModes }}
    resources:
      requests:
        storage: {{ .Values.dataVolume.pvc.size }}
---
{{- if .Values.dataVolume.secret.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "local-ai.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ template "local-ai.name" . }}
    helm.sh/chart: {{ include "local-ai.chart" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
data:
  accessKeyId: {{ .Values.dataVolume.secret.username }}
  secretKey: {{ .Values.dataVolume.secret.password }}
{{- end }}
{{- end }}